#include <iostream>
using namespace std;

class Sand_clock {
    float aSide;   // приватні змінні
    float bSide;
    float Area;

    public:
    Sand_clock(); // Конструктор без праметрів
    Sand_clock(float a, float b); // Конструктор з параметрами
    ~Sand_clock(); //Деструктор

    void setA(float a);
    void setB(float b);
    
    void calc();
    void getA();
    void getB();
     void p_sqrt();
friend ostream &operator<<(ostream &t,Sand_clock &obj);
Sand_clock operator+(Sand_clock &op2);
Sand_clock operator++(int notused);
};
Sand_clock::Sand_clock (){
    aSide = bSide = 0;
    cout << "Constructor without parameters\n"<<endl;
}
Sand_clock::Sand_clock (float a, float b){
    a = a;
    b = b;
    Area = 0;
    cout << "\nConstructor with parameters\t" << a << "\t" << b << endl;
}
Sand_clock::~Sand_clock (){
    cout << "\nDestructor"<<endl;
}
void Sand_clock::setA(float a)
{
    aSide = a;
}
void Sand_clock::setB(float b)
{
    bSide = b;
}
void Sand_clock::calc(){
    Area = ((0,5*bSide*aSide)/2+(0.5*bSide*aSide)/2);
}

void Sand_clock::p_sqrt()
{
    cout << "\СТОРОНА А\t" << aSide << endl;
    cout << "\nСТОРОНА Б\t" << bSide << endl;
    cout << "\nПЛОЩА\t" << Area << endl;
}
Sand_clock Sand_clock::operator+(Sand_clock &op2)
{
  Sand_clock temp;
  temp.aSide = aSide + op2.aSide;
  temp.bSide = bSide + op2.bSide;
  return temp;
}

Sand_clock Sand_clock::operator++(int notused)
{
  Sand_clock temp = *this;
  aSide++;
  bSide++;
  return temp;
}
int main(){
 
  Sand_clock a(1.2,3);
  Sand_clock b(1.5,4);
  Sand_clock c;
  c=a+b;
  cout<<"c=a+b"<<endl;
  c.getA();
  c.getB();
    cout<<"a before++"<<endl;
  a.getA();
  a.getB();
a++;
      cout<<"a++"<<endl;
  a.getA();
  a.getB();
      cout<<"a<<"<<endl;
cout << a;
}
